{"version":3,"sources":["Kartta.js","InfoModal.js","Yritykset.js","Info.js","Home.js","7.jpg","PageNavBar.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["API_KEY","process","Kartta","props","state","isMarkerShown","lat","lng","Geocode","setApiKey","setLanguage","setRegion","enableDebug","fromAddress","this","address","city","then","response","results","geometry","location","console","log","setState","parseFloat","error","getLocation","MapComponent","React","PureComponent","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","center","zoom","position","InfoModal","loaded","isLoading","updated","detailsUri","data","getCompanyInfo","searchString","undefined","replace","$","ajax","url","cache","dataType","done","fail","jqXHR","textStatus","errorThrown","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","name","Body","Table","striped","bordered","hover","xs","businessId","md","registrationDate","addresses","street","postCode","registeredOffices","registeredOffice","Footer","Button","onClick","onHide","Component","Yritykset","count","startDate","Date","now","endDate","modalshow","activeItemData","citySearch","getCompaniesFailed","searchClickHandler","bind","getCompanies","handleSetModal","className","show","modalShow","marginBottom","flex","flexDirection","alignItems","justifyContent","selected","onChange","date","dateFormat","margin","placeholder","e","target","value","marginLeft","width","variant","disabled","Spinner","as","animation","role","aria-hidden","Alert","Heading","responsive","map","index","textAlign","recordNumber","item","toISOString","split","toString","searchCity","encodeURIComponent","totalResults","Info","Container","Row","display","Card","Subtitle","Text","Link","href","Home","PageNavBar","Navbar","bg","sticky","Brand","to","Image","src","navImage","roundedCircle","alt","NavItem","App","Jumbotron","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.982956b7.chunk.js","sourcesContent":["import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n\nclass Kartta extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMarkerShown: false,\n      lat: 63.057522,\n      lng: 26.207678\n    }\n  }\n\n  // haetaan koordinaatit osoitteen perusteella Googlen Geocoding api:lla (react-geocode)\n  getLocation() {\n    Geocode.setApiKey(API_KEY);\n    Geocode.setLanguage(\"fi\");\n    Geocode.setRegion(\"fi\");\n    Geocode.enableDebug();\n    Geocode.fromAddress(this.props.address + this.props.city).then(\n      response => {\n        const { lat, lng } = response.results[0].geometry.location;\n        console.log(lat, lng);\n        // console.log(response.results[0].geometry.location);\n        this.setState(\n          { lat: parseFloat(lat), lng: parseFloat(lng) }\n        )\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  render() {\n    this.getLocation();\n    return (\n      // kutsutaan MapComponenttia, jolle viedään yrityksen koordinaatit\n      <MapComponent\n        lat={this.state.lat}\n        lng={this.state.lng}\n      />\n    )\n  }\n}\n\n// Komponentti piirtää kartan ja laittaa markerin annettuun koordinaattiin eli yrityksen osoitteen kohdalle (react-google-maps)\nconst MapComponent = compose(\n  withProps({\n    googleMapURL: 'https://maps.googleapis.com/maps/api/js?key='+API_KEY+'&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `500px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n\n  }),\n\n  withScriptjs,\n  withGoogleMap\n)((props) =>\n\n  <GoogleMap\n    defaultZoom={6}\n    defaultCenter={{ lat: 63.057522, lng: 26.207678 }}\n    center={{ lat: props.lat, lng: props.lng }}\n    zoom={14}>\n    <Marker position={{ lat: props.lat, lng: props.lng }} />\n  </GoogleMap>\n)\n\nexport default Kartta;\n","import React from 'react';\r\nimport $ from 'jquery';\r\nimport { Table, Button, Modal } from 'react-bootstrap';\r\nimport Kartta from './Kartta';\r\n\r\nclass InfoModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: '',        // yksittäisen yrityksen data\r\n            loaded: false,      // onko ladattu\r\n            isLoading: false,   // lataako\r\n            updated: true       // määrittäää osaltaan kutsutaanko getCompanyInfo metodia\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        // jos tuloksessa on jotain dataa JA klikatun yrityksen datailUri EI ole sama kuin parent komponentin välittämässä properissa\r\n        if (this.state.results !== '' && this.state.results[0].detailsUri !== this.props.data.detailsUri) {\r\n            this.setState(\r\n                { updated: true }\r\n            )\r\n        }\r\n        if (this.state.updated) {\r\n            this.getCompanyInfo();\r\n        }\r\n    }\r\n\r\n    // get detailed info from chosen company and render it to a table inside Modal \r\n    getCompanyInfo() {\r\n        this.setState(\r\n            {\r\n                updated: false,\r\n                results: '',\r\n                isLoading: true,\r\n                loaded: false\r\n            }\r\n        )\r\n        let searchString = this.props.data.detailsUri;\r\n        if(searchString!== undefined){searchString = searchString.replace('http','https')};\r\n        console.log(searchString);\r\n        $.ajax({\r\n            url: searchString,\r\n            cache: false,\r\n            dataType: 'json'\r\n        }).done((data) => {\r\n            this.setState({ results: data.results, loaded: true, isLoading: false });\r\n            console.log(\"Data Loading Done\");\r\n        }).fail((jqXHR, textStatus, errorThrown) => {\r\n            console.log(textStatus + \":\" + errorThrown);\r\n            this.setState({ loaded: true, isLoading: false });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loaded && this.props.data.detailsUri!== undefined) {\r\n            return (\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {this.state.results[0].name}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Table striped bordered hover size=\"sm\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Y-tunnus</th>\r\n                                    <td xs={6}>{this.state.results[0].businessId}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th xs={12} md={8}>Viimeisin rekisteröinti </th>\r\n                                    <td xs={6} md={4}>{this.state.results[0].registrationDate}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Katuosoite </th>\r\n                                    <td>{this.state.results[0].addresses[0].street}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Postinumero ja -toimipaikka </th>\r\n                                    <td>{this.state.results[0].addresses[0].postCode} {this.state.results[0].addresses[0].city}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Viimeisin rekisteröintitoimisto </th>\r\n                                    <td>{this.state.results[0].registeredOffices[0].registeredOffice}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                        <Kartta\r\n                            address={this.state.results[0].addresses[0].street}\r\n                            city={this.state.results[0].addresses[0].city}\r\n                        />\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.props.onHide}>Sulje</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            )\r\n        }\r\n        else return '';\r\n    }\r\n}\r\n\r\nexport default InfoModal;","import React from 'react';\nimport $ from 'jquery';\nimport { Table, Button, Alert } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport InfoModal from './InfoModal';\nimport Spinner from 'react-bootstrap/Spinner';\n\n\nclass Yritykset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],                                // tulokset json muodossa\n      count: '0',                                 // yritysten lukumäärä\n      loaded: false,                              // onko tulokset ladattu\n      startDate: new Date(Date.now() - 86400000), // rekisteröintikuulutuksen hakuvälin alkupvm \n      endDate: new Date(Date.now() - 86400000),   // rekisteröintikuulutuksen hakuvälin loppupvm \n      isLoading: false,                           // lataako vielä\n      modalshow: false,                           // näytetäänkö modal (eli yrityksen yksityiskohtainen inforuutu kartalla)\n      activeItemData: '',                         // yksittäisen yrityksen data, käytetään handleSetModal:ssa\n      citySearch: '',                             // yrityksen kotipaikka, jota etsitään\n      getCompaniesFailed: false                   // epäonnistuiko yrityshaku prh:lta\n    };\n    this.searchClickHandler = this.searchClickHandler.bind(this);\n    this.getCompanies = this.getCompanies.bind(this);\n    this.handleSetModal = this.handleSetModal.bind(this);\n  }\n\n  render() {\n\n    // Tämä osa näytetään, kun dataa EI OLE HAETTU\n    if (!this.state.loaded) {\n      return (\n        <div className=\"container\" >\n\n          {/* Haku päivämäärällä. Datepicker + nappi. Spinner näkyvissä jos isLoading = true */}\n          <p className=\"form-p\">Anna rekisteröintikuulutuksen aikaväli</p>\n\n          <div className=\"row\" style={{ marginBottom: '20px', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <DatePicker className=\"form\" selected={this.state.startDate} onChange={(date) => { this.setState({ startDate: date }) }} dateFormat=\"yyyy-MM-dd\" style={{ margin: '10px' }} />\n            <DatePicker className=\"form\" selected={this.state.endDate} onChange={(date) => { this.setState({ endDate: date }) }} dateFormat=\"yyyy-MM-dd\" />\n          </div>\n          <p className=\"form-p\">Anna kotipaikka</p>\n          <div className='row' style={{ marginBottom: '20px', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <input className=\"form\" placeholder=\"kunnan nimi\" onChange={(e) => { this.setState({ citySearch: e.target.value }) }} /> {/* Asetetaan citysearch staten tilaksi hakusana */}\n          </div>\n\n          <div className='row' style={{ marginBottom: '20px', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <Button style={{ marginLeft: '5px', width: '140px' }} variant=\"primary\" size=\"sm\" disabled={this.state.isLoading} onClick={this.searchClickHandler}>\n              {this.state.isLoading ?\n                <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                : 'Hae yritykset'}\n            </Button>\n          </div>\n        </div>\n      );\n    }\n\n    // Tämä osa näytetään, kun dataa ON HAETTU\n    return (\n\n      <div className=\"container\">\n\n        <InfoModal\n          show={this.state.modalShow}\n          onHide={() => this.setState({ modalShow: false })}\n          data={this.state.activeItemData}\n        />\n\n        <div className=\"container\" >\n\n          {/* Haku päivämäärällä. Datepicker + nappi. Spinner näkyvissä jos isLoading = true */}\n          <p className=\"form-p\">Anna rekisteröintikuulutuksen aikaväli</p>\n\n          <div className=\"row\" style={{ marginBottom: '20px', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <DatePicker className=\"form\" selected={this.state.startDate} onChange={(date) => { this.setState({ startDate: date }) }} dateFormat=\"yyyy-MM-dd\" style={{ margin: '10px' }} />\n            <DatePicker className=\"form\" selected={this.state.endDate} onChange={(date) => { this.setState({ endDate: date }) }} dateFormat=\"yyyy-MM-dd\" />\n          </div>\n          <p className=\"form-p\">Anna kotipaikka</p>\n          <div className='row' style={{ marginBottom: '20px', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <input className=\"form\" placeholder=\"kunnan nimi\" onChange={(e) => { this.setState({ citySearch: e.target.value }) }} /> {/* Asetetaan citysearch staten tilaksi hakusana */}\n          </div>\n\n          <div className='row' style={{ marginBottom: '20px', flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <Button style={{ marginLeft: '5px', width: '140px' }} variant=\"primary\" size=\"sm\" disabled={this.state.isLoading} onClick={this.searchClickHandler}>\n              {this.state.isLoading ?\n                <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n                : 'Hae yritykset'}\n            </Button>\n          </div>\n        </div>\n\n\n        <p>Uusia yrityksiä {this.state.count} kpl</p>\n\n        {this.state.count > 79 ?  // Alert box, jos hakutuloksia on yli 79 kpl\n          <Alert variant=\"warning\">\n            <Alert.Heading>Huom!</Alert.Heading>\n            <p>Sait haullesi {this.state.count} tulosta. Tuloksista näytetään vain 79 ensimmäistä!</p>\n          </Alert> : ''}\n\n        {this.state.getCompaniesFailed ?   // Alert box, jos haulla ei löytynyt yhtään hakutulosta\n          <Alert variant=\"primary\">\n            <Alert.Heading>Oho!</Alert.Heading>\n            <p>Hakuehdoillasi ei ilmeisesti löytynyt yhtään uutta yritystä.</p>\n          </Alert> : ''}\n\n\n        {/* Tulostetaan hakutulokset taulukkoon */}\n        <Table striped bordered hover responsive=\"sm\" size=\"sm\">\n          <thead>\n            <tr>\n              <th>Yrityksen nimi</th>\n              <th>Kotipaikka</th>\n              <th>Y-tunnus</th>\n              <th>Rekisteröintitunnus</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {\n              this.state.results.map((results, index) =>\n                <tr key={results.businessId}>\n                  <td onClick={this.handleSetModal.bind(this, results)} style={{ textAlign: 'left' }}>{results.name}</td>\n                  <td>{results.registeredOffice}</td>\n                  <td>{results.businessId}</td>\n                  <td>{results.recordNumber}</td>\n                </tr>\n              )\n            }\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n\n  // taulukon yritystä painettaessa asetetaan näytetään Modal ja välitetään results -statessa oleva klikatun yrityksen tieto activeItemData -stateen.  \n  handleSetModal(item) {\n    this.setState({\n      modalShow: true,\n      activeItemData: item,\n    });\n    console.log(\"key: \" + item.detailsUri);\n  };\n\n  // Button click handler. Tyhjätään aiemmin haettu data ja kutsutaan datan hakevaa metodia\n  searchClickHandler() {\n    this.setState({ results: [], count: '0', loaded: false, isLoading: true, getCompaniesFailed: false });\n    this.getCompanies();\n  };\n\n  // Haetaan uudet yritykset annetulta päivämäärältä\n  getCompanies() {\n    let startDate = this.state.startDate.toISOString().split(\"T\")[0].toString();\n    let endDate = this.state.endDate.toISOString().split(\"T\")[0].toString();\n    let searchCity = encodeURIComponent(this.state.citySearch);\n    console.log(startDate + ' - ' + endDate);\n    console.log(searchCity);\n    let searchString = 'https://avoindata.prh.fi/tr/v1/publicnotices?totalResults=true&maxResults=1000&registeredOffice=' + searchCity + '&noticeRegistrationFrom=' + startDate + '&noticeRegistrationTo=' + endDate + '&noticeRegistrationType=U'\n    // console.log(searchString);\n    $.ajax({\n      url: searchString,\n      cache: false,\n      dataType: 'json'\n    }).done((data) => {\n      this.setState({ results: data.results, count: data.totalResults, loaded: true, isLoading: false });\n    }).fail((jqXHR, textStatus, errorThrown) => {\n      console.log(textStatus + \":\" + errorThrown);\n      this.setState({ loaded: true, isLoading: false, getCompaniesFailed: true })  // getComapniesFailed : true näyttää Alert boxin taulukon yläpuolella\n    });\n  }\n}\n\nexport default Yritykset;\n","import React from 'react';\nimport { Row, Container, Card } from 'react-bootstrap';\n\nclass Info extends React.Component {\n  render() {\n    return (\n      <Container>\n\n        <Row>\n          <p>Kuulutustiedot sisältävät tietoa esim. tänään rekisteröidyistä uusista yrityksistä tai jonkin kunnan alueelle rekisteröidyistä uusista yrityksistä.\n          Tietoja on saatavilla seuraavista yrityksistä ja yhteisöistä:\n        <i>osakeyhtiö, julkinen osakeyhtiö, asunto-osakeyhtiö, osuuskunta, vakuutusyhtiö ja julkinen vakuutusyhtiö. </i>\n        Aineisto päivitetään kerran vuorokaudessa</p>\n        </Row>\n\n        <Row style={{ display: 'flex', justifyContent: 'center', width: '100%', height: '100%' }}>\n          <Card className='card-header' style={{ width: '18rem', marginBottom: '2rem' }}>\n            <Card.Body>\n              <Card.Title >Rekisterinpitäjä</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\"> Patentti- ja rekisterihallitus</Card.Subtitle>\n              <Card.Text>\n                Arkadiankatu 6 A,\n                00100 Helsinki\n              </Card.Text>\n              <Card.Link href=\"https://www.prh.fi\">prh.fi</Card.Link>\n              <Card.Link href=\"https://avoindata.prh.fi/\">avoindata.prh.fi</Card.Link>\n            </Card.Body>\n          </Card>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default Info;\n","import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Tervetuloa löytöretkelle uusien yritysten maailmaan!</h3>\r\n                <p>Tämä web-sovellus on luotu WEB-ohjelmointi -kurssin harjoitustyönä.\r\n                Sovelluksella on mahdollista hakea päivämäärän ja rekisteröintikunnan perusteella Suomessa helmikuun 2014 jälkeen perustettuja osakeyhtiöitä ja osuuskuntia.\r\n                </p>\r\n                <p>Tiedot haetaan Patentti- ja rekisterihallituksen avoimesta datapalvelusta. </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/7.7df972eb.jpg\";","import React from 'react';\r\nimport { Navbar, Image, NavItem } from 'react-bootstrap';\r\nimport { HashRouter as Router, Link} from 'react-router-dom';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport navImage from './7.jpg'\r\n\r\n// Sivuston navbar\r\nclass PageNavBar extends React.Component {\r\n\r\n    render() {\r\n        console.log(\"navbar versio: 17\");\r\n        return (\r\n            <Router>\r\n                <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\">\r\n                    <Navbar.Brand> <Link to='/'> <Image src={navImage} style={{ width: '40px', height: '40px' }} roundedCircle alt=\"NavBar\" /></Link>  </Navbar.Brand>\r\n                    <NavItem className=\"mr-auto\" id='nav'>\r\n                        <Link to='/haku'>Yritykset</Link>\r\n                        <Link to='/info'>Info</Link>\r\n                    </NavItem>\r\n                </Navbar>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default PageNavBar;\r\n\r\n","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport './App.css';\nimport Yritykset from './Yritykset';\nimport Info from './Info';\nimport Home from './Home';\nimport PageNavBar from './PageNavBar';\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  render() {\n    console.log(\"versio 19\");\n    return (\n      <div className=\"App\">\n        <div>\n          <PageNavBar />\n        </div>\n\n        <div className=\"container\">\n          <Jumbotron>\n            <h1 >Uusyrityshaku</h1>\n            <p>Hae uusien yritysten tiedot</p>\n          </Jumbotron>\n          <div>\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route path={'/haku'} component={Yritykset} />\n              <Route path={'/info'}>\n                <Info />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <HashRouter>\n  <App />\n</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}